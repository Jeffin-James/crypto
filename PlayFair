import java.awt.*;

public class PlayFairCipher {
    public static Point[] position;
    public static char[][] mat;

    public static String prepareText(String s, boolean JtoI){
        s = s.toUpperCase().replaceAll("[^A-Z]","");
        return JtoI ? s.replace("J","I") : s.replace("Q","");
    }

    public static void createTable(String key, boolean JtoI){
        mat = new char[5][5];
        position = new Point[26];
        String s = prepareText(key+"ABCDEFGHIJKLMNOPQRSTUVWXYZ",JtoI);
        for(int i=0,k=0;i<s.length();i++){
            char c = s.charAt(i);
            if(position[c - 'A'] == null){
                mat[k/5][k%5] = c;
                position[c - 'A'] = new Point(k%5,k/5);
                k++;
            }
        }
    }

    public static String codec(StringBuilder sb, int dir){
        int len = sb.length();
        for(int i=0;i<len;i+=2){
            char a = sb.charAt(i);
            char b = sb.charAt(i+1);
            int row1 = position[a - 'A'].y;
            int row2 = position[b - 'A'].y;
            int col1 = position[a - 'A'].x;
            int col2 = position[b - 'A'].x;
            if(row1 == row2){
                col1 = (col1+dir) % 5;
                col2 = (col2+dir) % 5;
            }
            else if (col1 == col2){
                row1 = (row1+dir)%5;
                row2 = (row2+dir)%5;
            }
            else {
                int temp = col1;
                col1 = col2;
                col2 = temp;
            }
            sb.setCharAt(i,mat[row1][col1]);
            sb.setCharAt(i+1,mat[row2][col2]);
        }
        return sb.toString();
    }

    private static String encode(String s){
        StringBuilder sb = new StringBuilder(s);
        for(int i=0;i<sb.length();i+=2){
            if(i==sb.length()-1)
                sb.append(sb.length()%2==1 ? "X" : "");
            else if (sb.charAt(i) == sb.charAt(i+1)) {
                sb.insert(i+1,"X");
            }
        }
        return codec(sb,1);
    }

    public static String decode(String s){
        return codec(new StringBuilder(s),4);
    }

    public static void main(String[] args) {
        String key = "CSE";
        String msg = "SECURITYLAB";
        boolean JtoI = true;
        createTable(key,JtoI);
        String enc = encode(msg);
        String dec = decode(enc);
        System.out.println(enc);
        System.out.println(dec);
    }
}
